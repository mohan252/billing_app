<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2007 (http://www.altova.com) by Mohan (kumudam) -->
<ReportConfiguration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="D:\personal\Projects\BillingApplication\ReportsConfig.xsd">
	<Report Name="TurnOverByParty">
		<ChartType Name="BarChart">
			<Filters>
				<Filter Name="Amount Rank" FilterValueType="List">
					<Query Name="Top 5">SELECT TOP 5 [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE) DESC</Query>
					<Query Name="Top 10">SELECT TOP 10 [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE) DESC</Query>
					<Query Name="Top 15">SELECT TOP 15 [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE) DESC</Query>
					<Query Name="Bottom 15">SELECT TOP 15 [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE)</Query>
				</Filter>
				<Filter Name="Party" FilterValueType="Query" FilterValueQuery="select distinct name from parties where id in (select partyid from bills)">
					<Query>SELECT '$VALUE',SUM(BALANCE) AS AMOUNT FROM BILLSTBL
WHERE PARTYID IN (SELECT ID FROM PARTIES WHERE NAME = '$VALUE')
GROUP BY PARTYID</Query>
				</Filter>
			</Filters>
			<ChartType Name="DataGrid" Description="TurnOver by Party : $KEY1">
				<Data>
					<Query>SELECT BILLNO,CONVERT(VARCHAR,BILLDATE,7) AS BILLDATE,BALANCE,AGENT FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID WHERE NAME = '$KEY1'</Query>
				</Data>
			</ChartType>
		</ChartType>
		<ChartType Name="PieChart">
			<Filters>
				<Filter Name="Amount Rank" FilterValueType="List">
					<Query Name="Top 5">SELECT * FROM
(SELECT TOP 5 [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE) DESC) as p1 
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY, SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE BILLSTBL.PARTYID NOT IN(
SELECT t12.PARTYID FROM (
SELECT TOP 5 PARTYID,SUM(BALANCE) AS BALANCE FROM BILLSTBL GROUP BY PARTYID ORDER BY SUM(BALANCE) DESC) as t12)) as p2</Query>
					<Query Name="Top 10">SELECT * FROM
(SELECT TOP 10 [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE) DESC) as p1 
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY, SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE BILLSTBL.PARTYID NOT IN(
SELECT t12.PARTYID FROM (
SELECT TOP 10 PARTYID,SUM(BALANCE) AS BALANCE FROM BILLSTBL GROUP BY PARTYID ORDER BY SUM(BALANCE) DESC) as t12)) as p2</Query>
					<Query Name="Top 15">SELECT * FROM
(SELECT TOP 15 [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE) DESC) as p1 
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY, SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE BILLSTBL.PARTYID NOT IN(
SELECT t12.PARTYID FROM (
SELECT TOP 15 PARTYID,SUM(BALANCE) AS BALANCE FROM BILLSTBL GROUP BY PARTYID ORDER BY SUM(BALANCE) DESC) as t12)) as p2</Query>
					<Query Name="Bottom 15">SELECT * FROM
(SELECT TOP 5 [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE)) as p1 
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY, SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE BILLSTBL.PARTYID NOT IN(
SELECT t12.PARTYID FROM (
SELECT TOP 5 PARTYID,SUM(BALANCE) AS BALANCE FROM BILLSTBL GROUP BY PARTYID ORDER BY SUM(BALANCE)) as t12)) as p2</Query>
				</Filter>
				<Filter Name="Party" FilterValueType="Query" FilterValueQuery="select distinct name from parties where id in (select partyid from bills)">
					<Query>SELECT * FROM
(SELECT [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLS INNER JOIN PARTIES ON PARTYID = ID WHERE [NAME] = '$VALUE' GROUP BY [NAME]) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY, SUM(BALANCE) AS BALANCE FROM BILLS
WHERE BILLSTBL.PARTYID NOT IN (SELECT ID FROM PARTIES WHERE [NAME] = '$VALUE')
) AS P2</Query>
				</Filter>
			</Filters>
		</ChartType>
		<Data FilterDescription="Party wise turn over (increasing order)">
			<Query>SELECT [NAME] AS PARTY , SUM(BALANCE) AS TURNOVER FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID GROUP BY [NAME] ORDER BY SUM(BALANCE) DESC</Query>
		</Data>
	</Report>
	<Report Name="TurnOverByAgent">
		<ChartType Name="BarChart">
			<Filters>
				<Filter Name="Amount Rank" FilterValueType="List">
					<Query Name="Top">SELECT AGENT,SUM(BALANCE) AS TURNOVER FROM BILLSTBL GROUP BY AGENT ORDER BY SUM(BALANCE) DESC</Query>
					<Query Name="Bottom">SELECT AGENT,SUM(BALANCE) AS TURNOVER FROM BILLSTBL GROUP BY AGENT ORDER BY SUM(BALANCE)</Query>
				</Filter>
				<Filter Name="Agent" FilterValueType="Query" FilterValueQuery="select distinct name from agents where name in (select agent from bills)">
					<Query>SELECT '$VALUE',SUM(BALANCE) AS AMOUNT FROM BILLSTBL
WHERE AGENT = '$VALUE'
GROUP BY AGENT</Query>
				</Filter>
			</Filters>
			<ChartType Name="DataGrid" Description="TurnOver by Agent : $KEY1">
				<Data>
					<Query>SELECT BILLNO,CONVERT(VARCHAR,BILLDATE,7) AS BILLDATE,[NAME] AS PARTY,BALANCE FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID WHERE AGENT = '$KEY1'</Query>
				</Data>
			</ChartType>
		</ChartType>
		<ChartType Name="PieChart">
			<Filters>
				<Filter Name="Amount Rank" FilterValueType="List">
					<Query Name="Top 5">SELECT * FROM
(SELECT TOP 5 AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL GROUP BY AGENT ORDER BY SUM(BALANCE) DESC) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE BILLSTBL.AGENT NOT IN(
SELECT T12.AGENT FROM (
SELECT TOP 5 AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL GROUP BY AGENT ORDER BY SUM(BALANCE) DESC) AS T12)) AS P2</Query>
					<Query Name="Bottom 5">SELECT * FROM
(SELECT TOP 5 AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL GROUP BY AGENT ORDER BY SUM(BALANCE)) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE BILLSTBL.AGENT NOT IN(
SELECT T12.AGENT FROM (
SELECT TOP 5 AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL GROUP BY AGENT ORDER BY SUM(BALANCE)) AS T12)) AS P2</Query>
				</Filter>
				<Filter Name="Agent" FilterValueType="Query" FilterValueQuery="select distinct name from agents where name in (select agent from bills)">
					<Query>SELECT * FROM
(SELECT AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL WHERE AGENT = '$VALUE' GROUP BY AGENT) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE BILLSTBL.AGENT NOT IN(
SELECT T12.AGENT FROM (
SELECT AGENT,SUM(BALANCE) AS BALANCE FROM BILLSTBL WHERE AGENT = '$VALUE' GROUP BY AGENT) AS T12)) AS P2</Query>
				</Filter>
			</Filters>
		</ChartType>
		<Data FilterDescription="Agent wise turn over in desending order">
			<Query>SELECT AGENT,SUM(BALANCE) AS TURNOVER FROM BILLSTBL GROUP BY AGENT ORDER BY SUM(BALANCE) DESC</Query>
		</Data>
	</Report>
	<Report Name="PendingAmount">
		<ChartType Name="BarChart">
			<Filters>
				<Filter Name="Amount Rank" FilterValueType="List">
					<Query Name="Top 5">SELECT TOP 5 [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME]
ORDER BY BALANCE DESC</Query>
					<Query Name="Top 10">SELECT TOP 10 [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME]
ORDER BY BALANCE DESC</Query>
					<Query Name="Top 15">SELECT TOP 15 [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME]
ORDER BY BALANCE DESC</Query>
					<Query Name="Bottom 15">SELECT TOP 15 [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME]
ORDER BY BALANCE</Query>
				</Filter>
			</Filters>
			<ChartType Name="LineChart" Description="Pending Amount for Party $KEY1 monthlywise">
				<Query>SELECT [NAME] AS PARTY,LEFT(CONVERT(VARCHAR,BILLDATE,9),3) AS MONTH,SUM(BALANCE) AS AMOUNT FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID
WHERE NAME = '$KEY1'
AND BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME],LEFT(CONVERT(VARCHAR,BILLDATE,9),3)</Query>
				<ChartType Name="DataGrid" Description="Pending Amount for Party $KEY1 for month $KEY2">
					<Data>
						<Query>SELECT BILLNO,CONVERT(VARCHAR,BILLDATE,7) AS BILLDATE,BALANCE FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID WHERE NAME = '$KEY1' AND BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL) AND LEFT(CONVERT(VARCHAR,BILLDATE,9),3) = '$KEY2'</Query>
					</Data>
				</ChartType>
			</ChartType>
		</ChartType>
		<ChartType Name="PieChart">
			<Filters>
				<Filter Name="Amount Rank" FilterValueType="List">
					<Query Name="Top 5">SELECT * FROM
(SELECT TOP 5 [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME]
ORDER BY BALANCE DESC) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE PARTYID NOT IN(
SELECT T12.PARTYID FROM(
SELECT TOP 5 PARTYID,SUM(BALANCE) AS BALANCE FROM BILLSTBL 
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY PARTYID ORDER BY BALANCE DESC) AS T12)) AS P2</Query>
					<Query Name="Top 10">SELECT * FROM
(SELECT TOP 10 [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME]
ORDER BY BALANCE DESC) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE PARTYID NOT IN(
SELECT T12.PARTYID FROM(
SELECT TOP 10 PARTYID,SUM(BALANCE) AS BALANCE FROM BILLSTBL 
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY PARTYID ORDER BY BALANCE DESC) AS T12)) AS P2</Query>
					<Query Name="Top 15">SELECT * FROM
(SELECT TOP 15 [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME]
ORDER BY BALANCE DESC) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE PARTYID NOT IN(
SELECT T12.PARTYID FROM(
SELECT TOP 15 PARTYID,SUM(BALANCE) AS BALANCE FROM BILLSTBL 
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY PARTYID ORDER BY BALANCE DESC) AS T12)) AS P2</Query>
					<Query Name="Bottom 5">SELECT * FROM
(SELECT TOP 5 [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME]
ORDER BY BALANCE) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE PARTYID NOT IN(
SELECT T12.PARTYID FROM(
SELECT TOP 5 PARTYID,SUM(BALANCE) AS BALANCE FROM BILLSTBL 
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY PARTYID ORDER BY BALANCE) AS T12)) AS P2</Query>
				</Filter>
				<Filter Name="Party" FilterValueType="Query" FilterValueQuery="select distinct name from parties where id in (select partyid from bills)">
					<Query>SELECT * FROM
(SELECT [NAME] AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
AND NAME = '$VALUE'
GROUP BY [NAME]) AS P1
UNION
SELECT * FROM
(SELECT 'OTHERS' AS PARTY,SUM(BALANCE) AS BALANCE FROM BILLSTBL
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
AND PARTYID NOT IN(SELECT ID FROM PARTIES WHERE [NAME] = '$VALUE')
) AS P2</Query>
				</Filter>
			</Filters>
		</ChartType>
		<Data FilterDescription="Party wise Pending Amount (increasing order)">
			<Query>SELECT [NAME] AS PARTY,AGENT,SUM(BALANCE) AS [TOTAL PENDING AMT] FROM BILLSTBL
INNER JOIN PARTIES ON PARTYID = ID
WHERE BILLNO NOT IN (SELECT BILLNO FROM BILLPAYMENTSTBL)
GROUP BY [NAME],AGENT
ORDER BY SUM(BALANCE) DESC</Query>
		</Data>
	</Report>
	<Report Name="SalesSummary">
		<ChartType Name="LineChart" Description="Sales Summary, TotalSales ( [QueryStart]SELECT SUM(BALANCE) AS SALES FROM BILLSTBL[QueryEnd])">
			<Query>SELECT LEFT(CONVERT(VARCHAR,BILLDATE,9),3) AS MONTH,SUM(BALANCE) AS SALES FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID
GROUP BY LEFT(CONVERT(VARCHAR,BILLDATE,9),3)</Query>
			<ChartType Name="DataGrid" Description="Sales for the month $KEY1">
				<Data>
					<Query>SELECT [NAME] AS PARTY,BALANCE,CONVERT(VARCHAR,BILLDATE,7) AS BILLDATE,BILLNO FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID
WHERE LEFT(CONVERT(VARCHAR,BILLDATE,9),3) = '$KEY1' ORDER BY BILLDATE</Query>
				</Data>
			</ChartType>
		</ChartType>
		<ChartType Name="PieChart" Description="Sales Distribution across TotalSales ( [QueryStart]SELECT SUM(BALANCE) AS SALES FROM BILLSTBL[QueryEnd])">
			<Query>SELECT LEFT(CONVERT(VARCHAR,BILLDATE,9),3) AS MONTH,SUM(BALANCE) AS SALES FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID
GROUP BY LEFT(CONVERT(VARCHAR,BILLDATE,9),3)</Query>
		</ChartType>
		<Data FilterDescription="Monthly Sales Summary for Current year">
			<Query>SELECT SUM(BALANCE) AS SALES, LEFT(CONVERT(VARCHAR,BILLDATE,9),3) AS MONTH FROM BILLSTBL INNER JOIN PARTIES ON PARTYID = ID
GROUP BY LEFT(CONVERT(VARCHAR,BILLDATE,9),3)</Query>
		</Data>
	</Report>
	<Report Name="ItemTurnOver">
		<ChartType Name="BarChart">
			<Filters>
				<Filter Name="Amount Rank" FilterValueType="List">
					<Query Name="Top 5">SELECT TOP 5 [NAME] AS ITEM,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY [NAME]
ORDER BY AMOUNT DESC</Query>
					<Query Name="Top 10">SELECT TOP 10 [NAME] AS ITEM,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY [NAME]
ORDER BY AMOUNT DESC</Query>
					<Query Name="Top 15">SELECT TOP 15 [NAME] AS ITEM,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY [NAME]
ORDER BY AMOUNT DESC</Query>
					<Query Name="Bottom 15">SELECT TOP 15 [NAME] AS ITEM,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY [NAME]
ORDER BY AMOUNT</Query>
				</Filter>
			</Filters>
			<ChartType Name="BarChart" Description="Partywise Item TurnOver for Item : $KEY1">
				<Query>SELECT PARTIES.NAME AS PARTY,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
INNER JOIN BILLSTBL ON BILLSTBL.BILLNO = BILLITEMSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLITEMSTBL.ADDRESS
INNER JOIN PARTIES ON BILLSTBL.PARTYID = PARTIES.ID
WHERE ITEMS.NAME = '$KEY1'
GROUP BY PARTIES.NAME
ORDER BY AMOUNT DESC</Query>
				<ChartType Name="DataGrid" Description="$KEY1 Turn Over by Party : $KEY2">
					<Data>
						<Query>SELECT BILLSTBL.BILLNO,BILLSTBL.ADDRESS,AGENT,PARTIES.NAME AS PARTY,BILLITEMSTBL.AMT FROM BILLSTBL INNER JOIN PARTIES ON ID = PARTYID
INNER JOIN BILLITEMSTBL ON BILLSTBL.BILLNO = BILLITEMSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLITEMSTBL.ADDRESS
INNER JOIN ITEMS ON BILLITEMSTBL.ITEMID = ITEMS.ID
WHERE ITEMS.NAME = '$KEY1'
AND PARTIES.NAME = '$KEY2'
ORDER BY BILLNO</Query>
					</Data>
				</ChartType>
			</ChartType>
		</ChartType>
		<ChartType Name="PieChart">
			<Filters>
				<Filter Name="Amount Rank" FilterValueType="List">
					<Query Name="Top 5">SELECT * FROM
(
SELECT TOP 5 NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY NAME
ORDER BY AMOUNT DESC) AS P1
UNION
SELECT * FROM
(SELECT 'OTHER ITEMS' AS NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
WHERE NAME NOT IN(
SELECT T12.NAME FROM(
SELECT TOP 5 NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY NAME
ORDER BY AMOUNT DESC) AS T12)) AS P2</Query>
					<Query Name="Top 10">SELECT * FROM
(
SELECT TOP 10 NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY NAME
ORDER BY AMOUNT DESC) AS P1
UNION
SELECT * FROM
(SELECT 'OTHER ITEMS' AS NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
WHERE NAME NOT IN(
SELECT T12.NAME FROM(
SELECT TOP 10 NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY NAME
ORDER BY AMOUNT DESC) AS T12)) AS P2</Query>
					<Query Name="Top 15">SELECT * FROM
(
SELECT TOP 15 NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY NAME
ORDER BY AMOUNT DESC) AS P1
UNION
SELECT * FROM
(SELECT 'OTHER ITEMS' AS NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
WHERE NAME NOT IN(
SELECT T12.NAME FROM(
SELECT TOP 15 NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY NAME
ORDER BY AMOUNT DESC) AS T12)) AS P2</Query>
					<Query Name="Bottom 5">SELECT * FROM
(
SELECT TOP 5 NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY NAME
ORDER BY AMOUNT) AS P1
UNION
SELECT * FROM
(SELECT 'OTHER ITEMS' AS NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
WHERE NAME NOT IN(
SELECT T12.NAME FROM(
SELECT TOP 5 NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY NAME
ORDER BY AMOUNT) AS T12)) AS P2</Query>
				</Filter>
				<Filter Name="Item" FilterValueType="Query" FilterValueQuery="SELECT DISTINCT NAME FROM ITEMS WHERE ID IN(SELECT ITEMID FROM BILLITEMS)">
					<Query>SELECT * FROM
(
SELECT NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
WHERE NAME = '$VALUE'
GROUP BY NAME) AS P1
UNION
SELECT * FROM
(SELECT 'OTHER ITEMS' AS NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
WHERE NAME NOT IN(
SELECT T12.NAME FROM(
SELECT NAME,SUM(AMT) AS AMOUNT FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
WHERE NAME = '$VALUE'
GROUP BY NAME) AS T12)) AS P2</Query>
				</Filter>
			</Filters>
		</ChartType>
		<Data FilterDescription="Item turn over (increasing order)">
			<Query>SELECT [NAME] AS ITEM,SUM(AMT) AS TURNOVER FROM BILLITEMSTBL INNER JOIN ITEMS ON ITEMID = ID
GROUP BY [NAME]
ORDER BY SUM(AMT) DESC</Query>
		</Data>
	</Report>
	<Report Name="SettlementSummary">
		<ChartType Name="BarChart" Description="Settlement Summary Agentwise. Total Collected Amount   [QueryStart]SELECT SUM(BALANCE) AS SALES FROM BILLSTBL WHERE BILLSTBL.BILLNO IN(SELECT BILLNO FROM BILLPAYMENTSTBL)[QueryEnd]">
			<Query>SELECT AGENT,AVG(DATEDIFF(DAY,BILLSTBL.BILLDATE,BILLPAYMENTSTBL.DATE)) AS AVGSETTLEMENTDAYS,COUNT(*) AS [TOOLTIP:NOOFBILLSSETTLED] FROM BILLPAYMENTSTBL
INNER JOIN BILLSTBL ON BILLSTBL.BILLNO = BILLPAYMENTSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLPAYMENTSTBL.ADDRESS
GROUP BY AGENT
ORDER BY AVGSETTLEMENTDAYS</Query>
			<ChartType Name="BarChart" Description="Settlement Summary for : $KEY1">
				<Query>SELECT PARTIES.NAME AS PARTY,AVG(DATEDIFF(DAY,BILLSTBL.BILLDATE,BILLPAYMENTSTBL.DATE)) AS AVGSETTLEMENTDAYS,COUNT(*) AS [TOOLTIP:NOOFBILLSSETTLED] FROM BILLPAYMENTSTBL
INNER JOIN BILLSTBL ON BILLSTBL.BILLNO = BILLPAYMENTSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLPAYMENTSTBL.ADDRESS
INNER JOIN PARTIES ON BILLSTBL.PARTYID = PARTIES.ID
AND BILLSTBL.AGENT = '$KEY1'
GROUP BY PARTIES.NAME</Query>
				<ChartType Name="DataGrid" Description="Settlement Summary for Party : $KEY2">
					<Data>
						<Query>SELECT BILLSTBL.BILLNO,CONVERT(VARCHAR,BILLDATE,7) AS BILLDATE ,CONVERT(VARCHAR,BILLPAYMENTSTBL.DATE,7) AS SETTLEMENTDATE,BALANCE FROM BILLPAYMENTSTBL
INNER JOIN BILLSTBL ON BILLSTBL.BILLNO = BILLPAYMENTSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLPAYMENTSTBL.ADDRESS
INNER JOIN PARTIES ON PARTIES.ID = BILLSTBL.PARTYID
WHERE BILLSTBL.AGENT = '$KEY1'
AND PARTIES.NAME = '$KEY2'</Query>
					</Data>
				</ChartType>
			</ChartType>
		</ChartType>
		<ChartType Name="PieChart" Description="Agent wise Settlement Distribution across Total Collected amount   [QueryStart]SELECT SUM(BALANCE) AS SALES FROM BILLSTBL WHERE BILLSTBL.BILLNO IN(SELECT BILLNO FROM BILLPAYMENTSTBL)[QueryEnd]">
			<Query>SELECT AGENT,SUM(BALANCE) AS BALANCE FROM BILLPAYMENTSTBL 
INNER JOIN BILLSTBL ON BILLSTBL.BILLNO = BILLPAYMENTSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLPAYMENTSTBL.ADDRESS
GROUP BY AGENT</Query>
		</ChartType>
		<Data FilterDescription="Average no of Days taken by each Party to settle bills for current year (increasing order)">
			<Query>SELECT [NAME] AS PARTY, AVG(DATEDIFF(DAY,BILLDATE,DATE)) AS 'AVERAGE SETTLEMENT DAYS' FROM BILLPAYMENTSTBL INNER JOIN BILLSTBL ON BILLSTBL.BILLNO = BILLPAYMENTSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLPAYMENTSTBL.ADDRESS
INNER JOIN PARTIES ON ID = PARTYID
WHERE DATEDIFF(MONTH,BILLDATE,DATE) &lt; 12
GROUP BY [NAME]
ORDER BY AVG(DATEDIFF(DAY,BILLDATE,DATE))</Query>
		</Data>
	</Report>
	<Report Name="Supply Chain">
		<ChartType Name="BarChart">
			<Filters>
				<Filter Name="Daywise" FilterValueType="List">
					<Query Name="0 - 25 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 0
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 25
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="26 - 50 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 26
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 50
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="51 - 75 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 51
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 75
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="76 - 100 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 76
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 100
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="101 - 125 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 101
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 125
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="126 - 150 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 126
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 150
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="151 - 175 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 151
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 175
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="176 - 200 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 176
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 200
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="201 - 250 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 201
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 250
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="251 - 300 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 251
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 300
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="301 - 325 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 301
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 325
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="326 - 365 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 326
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 365
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="&gt; 1 Year">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt; 365
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="366 - 400 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 366
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 400
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="401 - 500 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 401
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 500
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="501 - 600 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 501
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 600
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="601 - 770 Days">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt;= 601
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &lt;= 770
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
					<Query Name="&gt; 2 Year">SELECT DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [DAYS TAKEN FOR SUPPLY],COUNT(*) AS [NO OF BILLS],SUM(BALANCE) AS [TOOLTIP:BILL VALUE] FROM BILLSTBL 
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) &gt; 770
GROUP BY DATEDIFF(DAY,ORDERDATE,BILLDATE)
ORDER BY [DAYS TAKEN FOR SUPPLY] DESC</Query>
				</Filter>
			</Filters>
			<ChartType Name="DataGrid" Description="Bills taken $KEY1 days to supply">
				<Data FilterDescription="">
					<Query>SELECT BILLSTBL.BILLNO,CONVERT(VARCHAR,BILLDATE,7) AS BILLDATE,CONVERT(VARCHAR,ORDERDATE,7) AS ORDERDATE,PARTIES.NAME AS PARTY,ITEMS.NAME AS ITEM,BALANCE FROM BILLSTBL INNER JOIN PARTIES ON ID = PARTYID
LEFT OUTER JOIN BILLITEMSTBL ON BILLSTBL.BILLNO = BILLITEMSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLITEMSTBL.ADDRESS
FULL OUTER JOIN ITEMS ON ITEMS.ID = BILLITEMSTBL.ITEMID
WHERE ORDERDATE IS NOT NULL
AND DATEDIFF(DAY,ORDERDATE,BILLDATE) = $KEY1
ORDER BY BILLSTBL.BILLNO</Query>
				</Data>
			</ChartType>
		</ChartType>
		<Data FilterDescription="No of days to supply order">
			<Query>SELECT BILLSTBL.BILLNO,CONVERT(VARCHAR,BILLDATE,7) AS BILLDATE,CONVERT(VARCHAR,ORDERDATE,7) AS ORDERDATE,DATEDIFF(DAY,ORDERDATE,BILLDATE) AS [NO OF SUPPLY DAYS],PARTIES.NAME AS PARTY,ITEMS.NAME AS ITEM,BALANCE FROM BILLSTBL INNER JOIN PARTIES ON ID = PARTYID
LEFT OUTER JOIN BILLITEMSTBL ON BILLSTBL.BILLNO = BILLITEMSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLITEMSTBL.ADDRESS
FULL OUTER JOIN ITEMS ON ITEMS.ID = BILLITEMSTBL.ITEMID
WHERE ORDERDATE IS NOT NULL
ORDER BY [NO OF SUPPLY DAYS]</Query>
		</Data>
	</Report>
	<Report Name="Payment Remarks Report">
		<ChartType Name="BarChart" Description="No of Bills Remarks wise">
			<Query>SELECT REMARKS,COUNT(*) AS [NO OF BILLS]  FROM BILLPAYMENTSTBL WHERE REMARKS IS NOT NULL
GROUP BY REMARKS</Query>
			<ChartType Name="DataGrid" Description="Items with Remarks : $KEY1 (Items not in BILLITEMS are not listed)">
				<Data>
					<Query>SELECT BILLSTBL.BILLNO,BILLSTBL.ADDRESS,PARTIES.NAME AS PARTY,ITEMS.NAME AS ITEM  FROM BILLPAYMENTSTBL 
INNER JOIN BILLSTBL ON BILLPAYMENTSTBL.BILLNO = BILLSTBL.BILLNO AND BILLPAYMENTSTBL.ADDRESS = BILLSTBL.ADDRESS
INNER JOIN PARTIES ON ID = BILLSTBL.PARTYID
LEFT OUTER JOIN BILLITEMSTBL ON BILLITEMSTBL.BILLNO = BILLSTBL.BILLNO AND BILLITEMSTBL.ADDRESS = BILLSTBL.ADDRESS
LEFT JOIN ITEMS ON ITEMS.ID = BILLITEMSTBL.ITEMID
WHERE REMARKS = '$KEY1'
AND ITEMS.NAME IS NOT NULL</Query>
				</Data>
			</ChartType>
		</ChartType>
		<Data FilterDescription="Bills with remarks from Party">
			<Query>SELECT BILLSTBL.BILLNO,BILLSTBL.ADDRESS,PARTIES.NAME AS PARTY,REMARKS,ITEMS.NAME AS ITEM  FROM BILLPAYMENTSTBL 
INNER JOIN BILLSTBL ON BILLPAYMENTSTBL.BILLNO = BILLSTBL.BILLNO AND BILLPAYMENTSTBL.ADDRESS = BILLSTBL.ADDRESS
INNER JOIN PARTIES ON ID = BILLSTBL.PARTYID
LEFT OUTER JOIN BILLITEMSTBL ON BILLITEMSTBL.BILLNO = BILLSTBL.BILLNO AND BILLITEMSTBL.ADDRESS = BILLSTBL.ADDRESS
LEFT JOIN ITEMS ON ITEMS.ID = BILLITEMSTBL.ITEMID
WHERE REMARKS IS NOT NULL
ORDER BY REMARKS</Query>
		</Data>
	</Report>
	<Report Name="Partywise Item Stamp">
		<ChartType Name="DataGrid" Description="Partywise Items With Stamping">
			<Data>
				<Query>
          SELECT BILLSTBL.BILLNO,BILLSTBL.ADDRESS,CONVERT(VARCHAR,BILLDATE,7) AS BILLDATE,PARTIES.NAME AS PARTY,ITEMS.NAME AS ITEM,BILLITEMSTBL.RATE,STAMP FROM BILLSTBL INNER JOIN PARTIES ON PARTIES.ID = BILLSTBL.PARTYID
          INNER JOIN BILLITEMSTBL ON BILLSTBL.BILLNO = BILLITEMSTBL.BILLNO AND BILLSTBL.ADDRESS = BILLITEMSTBL.ADDRESS
          INNER JOIN ITEMS ON ITEMS.ID = BILLITEMSTBL.ITEMID</Query>
			</Data>
		</ChartType>
	</Report>
</ReportConfiguration>
<!--
	<Report Name="SettlementSummary1">
		<ChartType Name="BarChart">
			<Filters>
				<Filter Name="Monthly" FilterValueType="List">
					<Query Name="&lt; 1 month">select name,avg(datediff(day,billdate,date)) as settlementdays from billpayments INNER JOIN BILLS ON BILLS.BILLNO = billpayments.BILLNO AND BILLS.ADDRESS = BILLPAYMENTS.ADDRESS
inner join parties on id = partyid
where datediff(month,billdate,date) &lt; 1
group by name
order by avg(datediff(day,billdate,date)) desc</Query>
				</Filter>
			</Filters>
			<ChartType Name="LineChart" Description="Settlement Summary for : $KEY1 in last six months">
				<Query>select datediff(day,billdate,date) as settlementdays,count(bills.billno) as noofbills from billpayments INNER JOIN BILLS ON BILLS.BILLNO = billpayments.BILLNO AND BILLS.ADDRESS = BILLPAYMENTS.ADDRESS
inner join parties on id = partyid
where datediff(month,billdate,date) &lt; 1 and name = '$KEY1'
group by datediff(day,billdate,date)
order by datediff(day,billdate,date)</Query>
			</ChartType>
		</ChartType>
		<Data FilterDescription="Average no of Days taken by each Party to settle bills for current year (increasing order)">
			<Query>select name AS PARTY,avg(datediff(day,billdate,date)) as 'AVERAGE SETTLEMENT DAYS' from billpayments INNER JOIN BILLS ON BILLS.BILLNO = billpayments.BILLNO AND BILLS.ADDRESS = BILLPAYMENTS.ADDRESS
inner join parties on id = partyid
where datediff(month,billdate,date) &lt; 12
group by name
order by avg(datediff(day,billdate,date))</Query>
		</Data>
	</Report>
-->
